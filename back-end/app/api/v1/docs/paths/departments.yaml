/departments:
  get:
    tags:
      - Departments
    summary: List all departments
    description: >
      Retrieve a list of all departments.
      Can be filtered by name using partial match.
    parameters:
      - name: name
        in: query
        schema:
          type: string
        description: Filter departments by name (partial match)
    responses:
      200:
        description: List of departments retrieved successfully
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Department'
      500:
        description: Internal server error
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'

  post:
    tags:
      - Departments
    summary: Create a new department
    description: >
      Create a new department with a unique name.
      Both name and description are required and must not be empty strings.
      Leading and trailing whitespace will be trimmed.
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - name
              - description
            properties:
              name:
                type: string
                description: Name of the department (must be unique, will be trimmed)
              description:
                type: string
                description: Description of the department (will be trimmed)
    responses:
      201:
        description: Department created successfully
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Department'
      400:
        description: Invalid input
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
            examples:
              missingFields:
                value:
                  error: "Missing required fields"
                  message: "name and description are required"
              emptyField:
                value:
                  error: "Invalid input"
                  message: "name/description cannot be empty"
      409:
        description: Department name already exists
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
            example:
              error: "Department name already exists"
              message: "A department with this name already exists"
      500:
        description: Internal server error
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'

/departments/{id}:
  parameters:
    - in: path
      name: id
      required: true
      schema:
        type: integer
      description: Department ID

  get:
    tags:
      - Departments
    summary: Get department by ID
    description: Retrieve a single department by its ID
    responses:
      200:
        description: Department found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Department'
      404:
        description: Department not found
        content:
          application/json:
            schema:
              ref: '#/components/schemas/Error'
            example:
              error: "Department not found"
              message: "No department found with the provided ID"
      500:
        description: Internal server error
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'

  patch:
    tags:
      - Departments
    summary: Update department
    description: >
      Update a department's details.
      At least one field must be provided.
      Fields cannot be empty strings when provided.
      Leading and trailing whitespace will be trimmed.
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            minProperties: 1
            properties:
              name:
                type: string
                description: New name for the department (must be unique, will be trimmed)
              description:
                type: string
                description: New description for the department (will be trimmed)
    responses:
      200:
        description: Department updated successfully
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Department'
      400:
        description: Invalid input
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
            examples:
              noFields:
                value:
                  error: "Missing fields"
                  message: "At least one field (name or description) must be provided for update"
              emptyField:
                value:
                  error: "Invalid input"
                  message: "name/description cannot be empty"
      404:
        description: Department not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
            example:
              error: "Department not found"
              message: "No department found with the provided ID"
      409:
        description: Department name already exists
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
            example:
              error: "Department name already exists"
              message: "A department with this name already exists"
      500:
        description: Internal server error
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'

  delete:
    tags:
      - Departments
    summary: Delete department
    description: Delete a department by its ID
    responses:
      204:
        description: Department deleted successfully
      404:
        description: Department not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
            example:
              error: "Department not found"
              message: "No department found with the provided ID"
      500:
        description: Internal server error
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error' 