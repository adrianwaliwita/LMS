/courses:
  get:
    tags:
      - Courses
    summary: List all courses
    description: >
      Retrieve a list of all courses. Can be filtered by:
      * Title (partial match)
      * Category
      * Level
      * Department ID
      
      The response includes:
      * Department details
      * Associated modules
    parameters:
      - in: query
        name: title
        schema:
          type: string
        description: Filter courses by title (partial match)
      - in: query
        name: category
        schema:
          type: integer
          enum: [1, 2, 3, 4, 5]
        description: >
          Filter courses by category:
          * 1 - IT
          * 2 - Business
          * 3 - Engineering
          * 4 - Science
          * 5 - Art
      - in: query
        name: level
        schema:
          type: integer
          enum: [1, 2, 3]
        description: >
          Filter courses by level:
          * 1 - Diploma
          * 2 - Undergraduate
          * 3 - Postgraduate
      - in: query
        name: departmentId
        schema:
          type: integer
        description: Filter courses by department ID
    responses:
      200:
        description: List of courses retrieved successfully
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Course'
      500:
        description: Internal server error
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'

  post:
    tags:
      - Courses
    summary: Create a new course
    description: Create a new course with the provided details
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - title
              - description
              - category
              - level
              - price
              - departmentId
            properties:
              title:
                type: string
                description: Course title (must be unique)
              description:
                type: string
                description: Course description
              category:
                type: integer
                enum: [1, 2, 3, 4, 5]
                description: >
                  Course category:
                  * 1 - IT
                  * 2 - Business
                  * 3 - Engineering
                  * 4 - Science
                  * 5 - Art
              level:
                type: integer
                enum: [1, 2, 3]
                description: >
                  Course level:
                  * 1 - Diploma
                  * 2 - Undergraduate
                  * 3 - Postgraduate
              price:
                type: number
                format: float
                minimum: 0
                description: Course price (must be non-negative)
              departmentId:
                type: integer
                description: ID of the department this course belongs to
              moduleIds:
                type: array
                items:
                  type: integer
                description: Array of module IDs to associate with the course (optional)
    responses:
      201:
        description: Course created successfully
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
      400:
        description: >
          Invalid input. Possible reasons:
          * Missing required fields
          * Empty title or description
          * Invalid price (negative)
          * Invalid department ID
          * Invalid category value
          * Invalid level value
          * Invalid moduleIds format
          * Referenced department/modules do not exist
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
      409:
        description: Course title already exists
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
      500:
        description: Internal server error
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'

/courses/{id}:
  parameters:
    - in: path
      name: id
      required: true
      schema:
        type: integer
      description: Course ID

  get:
    tags:
      - Courses
    summary: Get course by ID
    description: >
      Retrieve course details by ID. The response includes:
      * Department details
      * Associated modules
    responses:
      200:
        description: Course details retrieved successfully
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
      404:
        description: Course not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
      500:
        description: Internal server error
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'

  patch:
    tags:
      - Courses
    summary: Update course
    description: >
      Update course details by ID. At least one field must be provided.
      When moduleIds is provided, it replaces all existing module associations.
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              title:
                type: string
                description: New course title (must be unique)
              description:
                type: string
                description: New course description
              category:
                type: integer
                enum: [1, 2, 3, 4, 5]
                description: >
                  New course category:
                  * 1 - IT
                  * 2 - Business
                  * 3 - Engineering
                  * 4 - Science
                  * 5 - Art
              level:
                type: integer
                enum: [1, 2, 3]
                description: >
                  New course level:
                  * 1 - Diploma
                  * 2 - Undergraduate
                  * 3 - Postgraduate
              price:
                type: number
                format: float
                minimum: 0
                description: New course price (must be non-negative)
              departmentId:
                type: integer
                description: ID of the new department to transfer the course to
              moduleIds:
                type: array
                items:
                  type: integer
                description: New array of module IDs (replaces existing associations)
    responses:
      200:
        description: Course updated successfully
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
      400:
        description: >
          Invalid input. Possible reasons:
          * No fields provided for update
          * Empty title or description
          * Invalid price (negative)
          * Invalid department ID
          * Invalid category value
          * Invalid level value
          * Invalid moduleIds format
          * Referenced department/modules do not exist
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
      404:
        description: Course not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
      409:
        description: Course title already exists
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
      500:
        description: Internal server error
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'

  delete:
    tags:
      - Courses
    summary: Delete course
    description: Delete course by ID
    responses:
      204:
        description: Course deleted successfully
      404:
        description: Course not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
      500:
        description: Internal server error
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error' 